{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatPageComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"h1\");\n    i0.ɵɵtext(3, \"Welcome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 8);\n    i0.ɵɵtext(5, \"User Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_4_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sender = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Room ID: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_4_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.roomId = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ChatPageComponent_div_4_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.joinRoom(ctx_r5.roomId));\n    });\n    i0.ɵɵtext(11, \"Join\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.sender);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.roomId);\n  }\n}\nfunction ChatPageComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"div\", 13)(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 14);\n    i0.ɵɵtext(6, \"Room1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 14);\n    i0.ɵɵtext(8, \"Room2\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 15)(10, \"div\", 16)(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 17)(14, \"div\", 18)(15, \"p\");\n    i0.ɵɵtext(16, \"FRom: asdasd \");\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"p\");\n    i0.ɵɵtext(20, \"Msg: e12ewqwefwev\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"p\");\n    i0.ɵɵtext(22, \"FRom: qwe \");\n    i0.ɵɵelementStart(23, \"span\");\n    i0.ɵɵtext(24, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"p\");\n    i0.ɵɵtext(26, \"Msg: dd\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"p\");\n    i0.ɵɵtext(28, \"FRom: asdasd \");\n    i0.ɵɵelementStart(29, \"span\");\n    i0.ɵɵtext(30, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"p\");\n    i0.ɵɵtext(32, \"Msg: rwe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"p\");\n    i0.ɵɵtext(34, \"FRom: qwe \");\n    i0.ɵɵelementStart(35, \"span\");\n    i0.ɵɵtext(36, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"p\");\n    i0.ɵɵtext(38, \"Msg: gfg\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"p\");\n    i0.ɵɵtext(40, \"FRom: qwe \");\n    i0.ɵɵelementStart(41, \"span\");\n    i0.ɵɵtext(42, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(43, \"p\");\n    i0.ɵɵtext(44, \"Msg: gfg\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"p\");\n    i0.ɵɵtext(46, \"FRom: qwe \");\n    i0.ɵɵelementStart(47, \"span\");\n    i0.ɵɵtext(48, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"p\");\n    i0.ɵɵtext(50, \"Msg: gfg\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(51, \"p\");\n    i0.ɵɵtext(52, \"FRom: qwe \");\n    i0.ɵɵelementStart(53, \"span\");\n    i0.ɵɵtext(54, \"time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(55, \"p\");\n    i0.ɵɵtext(56, \"Msg: gfg\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(57, \"div\", 19)(58, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_5_Template_input_ngModelChange_58_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newMsg = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function ChatPageComponent_div_5_Template_button_click_59_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.sendMessage(ctx_r8.newMsg));\n    });\n    i0.ɵɵtext(60, \"Send\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.sender);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"Room: \", ctx_r1.roomId, \"\");\n    i0.ɵɵadvance(46);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newMsg);\n  }\n}\nexport class ChatPageComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.messages = [];\n    this.roomId = 'room1';\n    this.newMsg = '';\n    this.sender = 'Phillip';\n    this.isLoggedIn = false;\n  }\n  getTime() {\n    const time = new Date();\n    let currTime = time.toLocaleString();\n    console.log(currTime);\n    return currTime;\n  }\n  joinRoom(roomId) {\n    if (roomId || this.sender) {\n      this.isLoggedIn = true;\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe(msg => {\n        this.messages.push(msg);\n      });\n    } else {\n      window.alert(\"Enter the missing field\");\n    }\n  }\n  sendMessage(message) {\n    let data = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: this.getTime().toString()\n    };\n    this.chatService.sendMessageByRoom(data);\n  }\n}\nChatPageComponent.ɵfac = function ChatPageComponent_Factory(t) {\n  return new (t || ChatPageComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nChatPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatPageComponent,\n  selectors: [[\"app-chat-page\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.googleapis.com\"], [\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatic.com\", \"crossorigin\", \"\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap\", \"rel\", \"stylesheet\"], [1, \"mainDiv\"], [\"class\", \"usrInfoContainer\", 4, \"ngIf\"], [\"class\", \"chatDiv\", 4, \"ngIf\"], [1, \"usrInfoContainer\"], [1, \"usrInfoDiv\"], [\"id\", \"usrName\"], [\"type\", \"text\", 1, \"usrInfo\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"joinBtn\", 3, \"click\"], [1, \"chatDiv\"], [1, \"roomContainer\"], [1, \"roomDiv\"], [1, \"roomBtn\"], [1, \"msgContainer\"], [1, \"roomInfoDiv\"], [1, \"msgDiv\"], [1, \"msgs\"], [1, \"msgSendDiv\"], [\"type\", \"text\", \"placeholder\", \"message\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function ChatPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0)(1, \"link\", 1)(2, \"link\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, ChatPageComponent_div_4_Template, 12, 2, \"div\", 4);\n      i0.ɵɵtemplate(5, ChatPageComponent_div_5_Template, 61, 3, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 832:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):\\\\nSassError: Expected expression.\\\\n    \\u2577\\\\n142 \\u2502     padding: \\\\r\\\\n    \\u2502              ^\\\\n    \\u2575\\\\n  src\\\\\\\\app\\\\\\\\pages\\\\\\\\chat-page\\\\\\\\chat-page.component.scss 142:14  root stylesheet\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[832]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatPageComponent","constructor","chatService","getTime","time","Date","currTime","toLocaleString","console","log","joinRoom","roomId","sender","isLoggedIn","chat$","getMsgByRoomId","subscribe","msg","messages","push","window","alert","sendMessage","message","data","senderMsg","newMsg","toString","sendMessageByRoom","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\pages\\chat-page\\chat-page.component.html","C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\pages\\chat-page\\chat-page.component.ts"],"sourcesContent":["<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n\n\n<div class=\"mainDiv\">\n    <div class=\"usrInfoContainer\" *ngIf=\"isLoggedIn\">\n        <div class=\"usrInfoDiv\">\n            <h1>Welcome</h1>\n            <p id=\"usrName\">User Name: </p>\n            <input  class=\"usrInfo\" type=\"text\" [(ngModel)]=\"sender\" />\n            <p>Room ID: </p>\n            <input  class=\"usrInfo\" type=\"text\" [(ngModel)]=\"roomId\" />\n            <button id=\"joinBtn\" (click)=\"joinRoom(roomId)\">Join</button>\n        </div>\n    </div>\n    <div class=\"chatDiv\" *ngIf=\"!isLoggedIn\">\n        <div class=\"roomContainer\">\n            <div class=\"roomDiv\">\n                <h1>{{sender}}</h1>\n                <button class=\"roomBtn\">Room1</button>\n                <button class=\"roomBtn\">Room2</button>\n            </div>\n        </div>\n        <div class=\"msgContainer\">\n            <div class=\"roomInfoDiv\">\n                <p>Room: {{roomId}}</p>\n            </div>\n            <div class=\"msgDiv\">\n                <div class=\"msgs\">\n                    <p>FRom: asdasd <span>time</span></p>\n                    <p>Msg: e12ewqwefwev</p>\n                    <p>FRom: qwe <span>time</span></p>\n                    <p>Msg: dd</p>\n                    <p>FRom: asdasd <span>time</span></p>\n                    <p>Msg: rwe</p>\n                    <p>FRom: qwe <span>time</span></p>\n                    <p>Msg: gfg</p>\n                    <p>FRom: qwe <span>time</span></p>\n                    <p>Msg: gfg</p>\n                    <p>FRom: qwe <span>time</span></p>\n                    <p>Msg: gfg</p>\n                    <p>FRom: qwe <span>time</span></p>\n                    <p>Msg: gfg</p>\n                </div>\n            </div>\n            <!-- <div class=\"msgDiv\">\n                <div *ngFor=\"let msg of messages\">\n                    <p>FRom: asdasd <span>time</span></p>\n                    <p>Msg: e12ewqwefwev</p>\n                    <p>From: {{msg.sender}}</p>\n                    <p>Msg: {{msg.senderMsg}}</p>\n                </div>\n            </div> -->\n            <div class=\"msgSendDiv\">\n                <input type=\"text\" [(ngModel)]=\"newMsg\" placeholder=\"message\" />\n                <button (click)=\"sendMessage(newMsg)\">Send</button>\n            </div>\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { async, Observable, of } from 'rxjs';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { ChatModel } from 'src/models/chat.model';\n\n@Component({\n  selector: 'app-chat-page',\n  templateUrl: './chat-page.component.html',\n  styleUrls: ['./chat-page.component.scss']\n})\nexport class ChatPageComponent{\n\n  constructor(private chatService: ChatService){}\n\n  chat$ !: Observable<any>;\n  messages: any = [];\n  roomId: string = 'room1';\n  newMsg: string = '';\n  sender: string = 'Phillip';\n  isLoggedIn: boolean = false;\n\n  getTime(){\n    const time = new Date();\n    let currTime: string = time.toLocaleString();\n    console.log(currTime);\n    return currTime;\n  }\n\n  joinRoom(roomId: string){\n    if(roomId || this.sender){\n      this.isLoggedIn = true;\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe( (msg: any) => {\n        this.messages.push(msg);\n      });\n    }else{\n      window.alert(\"Enter the missing field\");\n    }\n  }\n\n  sendMessage(message: string){\n    let data: ChatModel = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: this.getTime().toString(),\n    }\n    this.chatService.sendMessageByRoom(data);\n  }\n\n  // chat$: Observable<ChatState>;\n  // room$: Observable<ChatState>;\n\n  // constructor(private store: Store<{chat: ChatState}>, private chatService: ChatService){\n  //   this.chat$ = this.store.select('chat');\n  //   this.room$ = this.store.select('chat');\n  // }\n\n  // ngOnInit(){\n  //   this.store.dispatch(ChatActions.getAllChat());\n  //   this.chat$.subscribe( (data) => {\n  //     // console.log(data);\n  //   });\n  // }\n\n  // getChatById(roomId: string){\n  //   // this.store.dispatch(ChatActions.getById());\n  //   // this.chat$.subscribe( (data) => {\n  //   //   // console.log(data);\n  //   // })\n  //   this.chatService.getById(roomId).subscribe((data) =>{\n  //     console.log(data)\n  //   })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}