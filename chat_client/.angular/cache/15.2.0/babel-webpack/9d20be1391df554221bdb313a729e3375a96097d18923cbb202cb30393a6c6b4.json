{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport * as ChatActions from '../actions/chat.action';\nconst initialState = {\n  chatData: [],\n  isSuccess: true,\n  loading: false,\n  error: ''\n};\nexport const ChatReducer = createReducer(initialState, on(ChatActions.getAllChat, state => ({\n  ...state,\n  loading: false\n})), on(ChatActions.getAllChatSuccess, (state, action) => ({\n  ...state,\n  chatData: action.chatData,\n  isSuccess: true,\n  loading: false\n})), on(ChatActions.getAllChatFailure, (state, action) => ({\n  ...state,\n  chatData: [],\n  loading: false,\n  error: action.error\n})));","map":{"version":3,"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAE/C,OAAO,KAAKC,WAAW,MAAM,wBAAwB;AAGrD,MAAMC,YAAY,GAAc;EAC5BC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACV;AAED,OAAO,MAAMC,WAAW,GAAGR,aAAa,CACpCG,YAAY,EACZF,EAAE,CAACC,WAAW,CAACO,UAAU,EAAGC,KAAK,KAAM;EAAC,GAAGA,KAAK;EAAEJ,OAAO,EAAE;AAAK,CAAC,CAAC,CAAC,EACnEL,EAAE,CAACC,WAAW,CAACS,iBAAiB,EAAE,CAACD,KAAK,EAAEE,MAAM,MAAM;EAClD,GAAGF,KAAK;EACRN,QAAQ,EAAEQ,MAAM,CAACR,QAAQ;EACzBC,SAAS,EAAE,IAAI;EACfC,OAAO,EAAE;CACZ,CAAC,CAAC,EACHL,EAAE,CAACC,WAAW,CAACW,iBAAiB,EAAE,CAACH,KAAK,EAAEE,MAAM,MAAM;EAClD,GAAGF,KAAK;EACRN,QAAQ,EAAE,EAAE;EACZE,OAAO,EAAE,KAAK;EACdC,KAAK,EAAEK,MAAM,CAACL;CACjB,CAAC,CAAC,CACN","names":["createReducer","on","ChatActions","initialState","chatData","isSuccess","loading","error","ChatReducer","getAllChat","state","getAllChatSuccess","action","getAllChatFailure"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\NgRx\\reducers\\chat.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { ChatState } from \"../states/chat.state\";\r\nimport * as ChatActions from '../actions/chat.action'\r\n\r\n\r\nconst initialState: ChatState = {\r\n    chatData: [],\r\n    isSuccess: true,\r\n    loading: false,\r\n    error: ''\r\n}\r\n\r\nexport const ChatReducer = createReducer(\r\n    initialState,\r\n    on(ChatActions.getAllChat, (state) => ({...state, loading: false})),\r\n    on(ChatActions.getAllChatSuccess, (state, action) => ({\r\n        ...state,\r\n        chatData: action.chatData,\r\n        isSuccess: true,\r\n        loading: false,\r\n    })),\r\n    on(ChatActions.getAllChatFailure, (state, action) => ({\r\n        ...state,\r\n        chatData: [],\r\n        loading: false,\r\n        error: action.error,\r\n    }))\r\n)"]},"metadata":{},"sourceType":"module","externalDependencies":[]}