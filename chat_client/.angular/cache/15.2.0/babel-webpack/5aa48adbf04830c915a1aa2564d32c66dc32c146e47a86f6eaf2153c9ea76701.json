{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getAllChats() {\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?id=room1`);\n  }\n  getById(roomId) {\n    // let param: any = {'?id': roomId};\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?id=room1`);\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;EAAgB;EAE9CC,WAAW;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,OAAO,oBAAoB,CAAC;EACxE;EAEAC,OAAO,CAACC,MAAc;IACpB;IACA,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,OAAO,oBAAoB,CAAC;EACxE;;AAXWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAQ,SAAXR,WAAW;EAAAS,YAFV;AAAM","names":["environment","ChatService","constructor","httpClient","getAllChats","get","chatUrl","getById","roomId","factory","providedIn"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { ChatModel } from 'src/models/chat.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllChats(){\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?id=room1`);\n  }\n\n  getById(roomId: string){\n    // let param: any = {'?id': roomId};\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?id=room1`)\n  }\n\n  // createChat(chatData: ChatModel){\n  //   return this.httpClient.post<ChatModel>(`${environment.chatUrl}`, {\n  //     roomId: chatData.roomId,\n  //     sender: chatData.sender,\n  //     receiver: chatData.receiver,\n  //     receiverMsg: chatData.receiverMsg,\n  //     senderMsg: chatData.senderMsg,\n  //     time: chatData.time\n  //   })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}