{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/chat.service\";\nimport * as i2 from \"@angular/router\";\nexport class AppComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.title = 'chat_client';\n    this.messages = [];\n    this.roomId = '';\n    this.newMsg = '';\n    this.sender = '';\n  }\n  ngOnInit() {\n    // this.chatService.getAllChats().subscribe((data) =>{\n    //   console.log(data)\n    // })\n    // this.chatService.getById(\"room1\").subscribe((data) =>{\n    //   console.log(data)\n    // })\n  }\n  joinRoom(roomId) {\n    if (roomId || this.sender) {\n      console.log(\"Joined in room: \", roomId);\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe(msg => {\n        this.messages.push(msg);\n      });\n    } else {\n      window.alert(\"Enter the missing field\");\n    }\n  }\n  sendMessage(message) {\n    let data = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: Date.now().toLocaleString()\n    };\n    this.chatService.sendMessageByRoom(data);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  dependencies: [i2.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,UAAK,GAAG,aAAa;IAcrB,aAAQ,GAAO,EAAE;IACjB,WAAM,GAAW,EAAE;IACnB,WAAM,GAAW,EAAE;IACnB,WAAM,GAAW,EAAE;EAf2B;EAE9CC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;EAAA;EASFC,QAAQ,CAACC,MAAc;IACrB,IAAGA,MAAM,IAAI,IAAI,CAACC,MAAM,EAAC;MACvBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,MAAM,CAAC;MACvC,IAAI,CAACI,KAAK,GAAG,IAAI,CAACP,WAAW,CAACQ,cAAc,CAACL,MAAM,CAAC;MACpD,IAAI,CAACI,KAAK,CAACE,SAAS,CAAGC,GAAQ,IAAI;QACjC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,GAAG,CAAC;MACzB,CAAC,CAAC;KACH,MAAI;MACHG,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC;;EAE3C;EAEAC,WAAW,CAACC,OAAe;IACzB,IAAIC,IAAI,GAAc;MACpBd,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBc,SAAS,EAAE,IAAI,CAACC,MAAM;MACtBC,IAAI,EAAEC,IAAI,CAACC,GAAG,EAAE,CAACC,cAAc;KAChC;IACD,IAAI,CAACvB,WAAW,CAACwB,iBAAiB,CAACP,IAAI,CAAC;EAC1C;;AAxCWnB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA2B;EAAAC;EAAAC;EAAAC;IAAA;MCIzBC,gCAA+B","names":["AppComponent","constructor","chatService","ngOnInit","joinRoom","roomId","sender","console","log","chat$","getMsgByRoomId","subscribe","msg","messages","push","window","alert","sendMessage","message","data","senderMsg","newMsg","time","Date","now","toLocaleString","sendMessageByRoom","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\app.component.ts","C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChatModel } from 'src/models/chat.model';\nimport { ChatService } from './services/chat.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'chat_client';\n\n  constructor(private chatService: ChatService){}\n\n  ngOnInit(){\n    // this.chatService.getAllChats().subscribe((data) =>{\n    //   console.log(data)\n    // })\n    // this.chatService.getById(\"room1\").subscribe((data) =>{\n    //   console.log(data)\n    // })\n  }\n\n  chat$!: Observable<any>;\n  messages :any= [];\n  roomId: string = '';\n  newMsg: string = '';\n  sender: string = '';\n\n  joinRoom(roomId: string){\n    if(roomId || this.sender){\n      console.log(\"Joined in room: \", roomId);\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe( (msg: any) => {\n        this.messages.push(msg);\n      });\n    }else{\n      window.alert(\"Enter the missing field\");\n    }\n  }\n\n  sendMessage(message: string){\n    let data: ChatModel = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: Date.now().toLocaleString(),\n    }\n    this.chatService.sendMessageByRoom(data);\n  }\n}\n","<!-- <input type=\"text\" [(ngModel)]=\"sender\" placeholder=\"user\" />\r\n<input type=\"text\" [(ngModel)]=\"roomId\" placeholder=\"room id\"/>\r\n<button (click)=\"joinRoom(roomId)\">Join</button>\r\n\r\n<input type=\"text\" [(ngModel)]=\"newMsg\" placeholder=\"message\"/>\r\n<button (click)=\"sendMessage(newMsg)\">Send</button>\r\n\r\n<div  *ngFor=\"let msg of messages\">\r\n    <p>FRom: {{msg.sender}}</p>\r\n    <p>Msg: {{msg.senderMsg}}</p>\r\n</div> -->\r\n\r\n\r\n\r\n<router-outlet></router-outlet>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}