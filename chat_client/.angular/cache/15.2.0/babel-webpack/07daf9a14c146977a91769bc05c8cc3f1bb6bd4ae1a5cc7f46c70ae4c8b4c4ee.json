{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/chat.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatPageComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"h1\");\n    i0.ɵɵtext(3, \"Welcome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 8);\n    i0.ɵɵtext(5, \"User Name: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_4_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sender = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Room ID: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_4_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.roomId = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ChatPageComponent_div_4_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.joinRoom(ctx_r5.roomId));\n    });\n    i0.ɵɵtext(11, \"Join\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.sender);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.roomId);\n  }\n}\nfunction ChatPageComponent_div_5_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"From: asdasd\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Msg: e12ewqwefwev\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChatPageComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12)(2, \"div\", 13)(3, \"h1\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 14);\n    i0.ɵɵtext(6, \"Room1\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 14);\n    i0.ɵɵtext(8, \"Room2\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 15)(10, \"div\", 16)(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\");\n    i0.ɵɵtext(14, \"From: asdasd\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16, \"Msg: e12ewqwefwev\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(17, ChatPageComponent_div_5_div_17_Template, 5, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 18)(19, \"input\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatPageComponent_div_5_Template_input_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newMsg = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function ChatPageComponent_div_5_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.sendMessage(ctx_r10.newMsg));\n    });\n    i0.ɵɵtext(21, \"Send\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.sender);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"Room: \", ctx_r1.roomId, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.newMsg);\n  }\n}\nexport class ChatPageComponent {\n  constructor(chatService) {\n    this.chatService = chatService;\n    this.messages = [];\n    this.roomId = '';\n    this.newMsg = '';\n    this.sender = '';\n    this.isLoggedIn = false;\n  }\n  getTime() {\n    const time = new Date();\n    let currTime = time.toLocaleString();\n    console.log(currTime);\n    return currTime;\n  }\n  joinRoom(roomId) {\n    if (roomId || this.sender) {\n      this.isLoggedIn = true;\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe(msg => {\n        this.messages.push(msg);\n      });\n    } else {\n      window.alert(\"Enter the missing field\");\n    }\n  }\n  sendMessage(message) {\n    let data = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: this.getTime().toString()\n    };\n    this.chatService.sendMessageByRoom(data);\n  }\n}\nChatPageComponent.ɵfac = function ChatPageComponent_Factory(t) {\n  return new (t || ChatPageComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n};\nChatPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatPageComponent,\n  selectors: [[\"app-chat-page\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"rel\", \"preconnect\", \"href\", \"https://fonts.googleapis.com\"], [\"rel\", \"preconnect\", \"href\", \"https://fonts.gstatic.com\", \"crossorigin\", \"\"], [\"href\", \"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap\", \"rel\", \"stylesheet\"], [1, \"mainDiv\"], [\"class\", \"usrInfoContainer\", 4, \"ngIf\"], [\"class\", \"chatDiv\", 4, \"ngIf\"], [1, \"usrInfoContainer\"], [1, \"usrInfoDiv\"], [\"id\", \"usrName\"], [\"type\", \"text\", 1, \"usrInfo\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"joinBtn\", 3, \"click\"], [1, \"chatDiv\"], [1, \"roomContainer\"], [1, \"roomDiv\"], [1, \"roomBtn\"], [1, \"msgContainer\"], [\"clas\", \"msgDiv\"], [4, \"ngFor\", \"ngForOf\"], [1, \"msgSendDiv\"], [\"type\", \"text\", \"placeholder\", \"message\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function ChatPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"link\", 0)(1, \"link\", 1)(2, \"link\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵtemplate(4, ChatPageComponent_div_4_Template, 12, 2, \"div\", 4);\n      i0.ɵɵtemplate(5, ChatPageComponent_div_5_Template, 22, 4, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\".mainDiv[_ngcontent-%COMP%] {\\n  width: 118rem;\\n  height: 60.1rem;\\n  background-color: #26282c;\\n  margin: -0.4%;\\n  overflow: hidden;\\n  overflow-y: scroll;\\n  padding: 1rem;\\n}\\n\\n.usrInfoContainer[_ngcontent-%COMP%] {\\n  border-radius: 7px;\\n  width: 20rem;\\n  height: 20rem;\\n  background-color: #3f4249;\\n  padding: 2rem;\\n  margin: auto auto;\\n  margin-top: 12%;\\n}\\n\\n.usrInfoDiv[_ngcontent-%COMP%] {\\n  font-family: \\\"Ubuntu\\\", sans-serif;\\n  font-size: 1.2rem;\\n  font-weight: 400;\\n  color: #BBBDBF;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.usrInfoDiv[_ngcontent-%COMP%]    > h1[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: -2%;\\n}\\n\\n#usrName[_ngcontent-%COMP%] {\\n  margin-top: -0.4%;\\n}\\n\\n.usrInfo[_ngcontent-%COMP%] {\\n  font-family: \\\"Ubuntu\\\", sans-serif;\\n  border: none;\\n  background-color: #212225;\\n  color: #BBBDBF;\\n  font-size: 1rem;\\n  padding: 0.5rem;\\n  margin-top: -4%;\\n}\\n\\n.usrInfo[_ngcontent-%COMP%]:focus {\\n  outline-style: none;\\n}\\n\\n#joinBtn[_ngcontent-%COMP%] {\\n  background-color: #5865F2;\\n  color: #f0f0f0;\\n  font-family: \\\"Ubuntu\\\", sans-serif;\\n  font-size: 1.2rem;\\n  border: none;\\n  border-radius: 3px;\\n  margin-top: 10%;\\n  padding: 0.5rem;\\n}\\n\\n#joinBtn[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  background-color: #4551da;\\n}\\n\\n.chatDiv[_ngcontent-%COMP%] {\\n  height: 62rem;\\n  background-color: #202226;\\n  color: aqua;\\n  display: flex;\\n  flex-direction: row;\\n  margin: -0.8%;\\n}\\n\\n.roomContainer[_ngcontent-%COMP%] {\\n  width: 20rem;\\n  background-color: #2F3137;\\n  padding: 1rem;\\n}\\n\\n.roomDiv[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.roomBtn[_ngcontent-%COMP%] {\\n  margin-top: 2%;\\n}\\n\\n.msgContainer[_ngcontent-%COMP%] {\\n  width: 97em;\\n  background-color: #35383E;\\n  padding: 2rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvY2hhdC1wYWdlL2NoYXQtcGFnZS5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uL2NsYXNzJTIwcHJvamVjdHMvbmVzdGpzL0NoYXQvY2hhdF9jbGllbnQvc3JjL2FwcC9wYWdlcy9jaGF0LXBhZ2UvY2hhdC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtBQ0NKOztBREVBO0VBRUksa0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGlCQUFBO0VBQ0EsZUFBQTtBQ0FKOztBREdBO0VBQ0ksaUNBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQ0FKOztBREdBO0VBQ0ksa0JBQUE7RUFDQSxlQUFBO0FDQUo7O0FER0E7RUFDSSxpQkFBQTtBQ0FKOztBREdBO0VBQ0ksaUNBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FDQUo7O0FER0E7RUFDSSxtQkFBQTtBQ0FKOztBREdBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0VBQ0EsaUNBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FDQUo7O0FER0E7RUFDSSxlQUFBO0VBQ0EseUJBQUE7QUNBSjs7QURLQTtFQUNJLGFBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FDRko7O0FES0E7RUFDSSxZQUFBO0VBQ0EseUJBQUE7RUFDQSxhQUFBO0FDRko7O0FES0E7RUFDSSxhQUFBO0VBQ0Esc0JBQUE7QUNGSjs7QURLQTtFQUNJLGNBQUE7QUNGSjs7QURLQTtFQUNJLFdBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7QUNGSiIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluRGl2e1xyXG4gICAgd2lkdGg6IDExOHJlbTtcclxuICAgIGhlaWdodDogNjAuMXJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMyNjI4MmM7XHJcbiAgICBtYXJnaW46IC0uNCU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxufVxyXG5cclxuLnVzckluZm9Db250YWluZXJ7XHJcbiAgICAvLyBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA3cHg7XHJcbiAgICB3aWR0aDogMjByZW07XHJcbiAgICBoZWlnaHQ6IDIwcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNmNDI0OTtcclxuICAgIHBhZGRpbmc6IDJyZW07XHJcbiAgICBtYXJnaW46IGF1dG8gYXV0bztcclxuICAgIG1hcmdpbi10b3A6IDEyJTtcclxufVxyXG5cclxuLnVzckluZm9EaXZ7XHJcbiAgICBmb250LWZhbWlseTogJ1VidW50dScsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICBjb2xvcjogI0JCQkRCRjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcblxyXG4udXNySW5mb0RpdiA+IGgxe1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogLTIlO1xyXG59XHJcblxyXG4jdXNyTmFtZXtcclxuICAgIG1hcmdpbi10b3A6IC0uNCU7XHJcbn1cclxuXHJcbi51c3JJbmZve1xyXG4gICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIxMjIyNTtcclxuICAgIGNvbG9yOiAjQkJCREJGO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgcGFkZGluZzogLjVyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAtNCU7XHJcbn1cclxuXHJcbi51c3JJbmZvOmZvY3Vze1xyXG4gICAgb3V0bGluZS1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuI2pvaW5CdG57XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTg2NUYyOyAgICBcclxuICAgIGNvbG9yOiAjZjBmMGYwO1xyXG4gICAgZm9udC1mYW1pbHk6ICdVYnVudHUnLCBzYW5zLXNlcmlmO1xyXG4gICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxMCU7XHJcbiAgICBwYWRkaW5nOiAuNXJlbTtcclxufVxyXG5cclxuI2pvaW5CdG46aG92ZXJ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDU1MWRhOyBcclxufVxyXG5cclxuXHJcbi8vIGNoYXREaXZcclxuLmNoYXREaXZ7XHJcbiAgICBoZWlnaHQ6IDYycmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzIwMjIyNjtcclxuICAgIGNvbG9yOiBhcXVhO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICBtYXJnaW46IC0uOCU7XHJcbn1cclxuXHJcbi5yb29tQ29udGFpbmVye1xyXG4gICAgd2lkdGg6IDIwcmVtO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJGMzEzNztcclxuICAgIHBhZGRpbmc6IDFyZW07XHJcbn1cclxuXHJcbi5yb29tRGl2e1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi5yb29tQnRue1xyXG4gICAgbWFyZ2luLXRvcDogMiU7XHJcbn1cclxuXHJcbi5tc2dDb250YWluZXJ7XHJcbiAgICB3aWR0aDogOTdlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNTM4M0U7XHJcbiAgICBwYWRkaW5nOiAycmVtO1xyXG59XHJcbiIsIi5tYWluRGl2IHtcbiAgd2lkdGg6IDExOHJlbTtcbiAgaGVpZ2h0OiA2MC4xcmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjYyODJjO1xuICBtYXJnaW46IC0wLjQlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHBhZGRpbmc6IDFyZW07XG59XG5cbi51c3JJbmZvQ29udGFpbmVyIHtcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xuICB3aWR0aDogMjByZW07XG4gIGhlaWdodDogMjByZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMzZjQyNDk7XG4gIHBhZGRpbmc6IDJyZW07XG4gIG1hcmdpbjogYXV0byBhdXRvO1xuICBtYXJnaW4tdG9wOiAxMiU7XG59XG5cbi51c3JJbmZvRGl2IHtcbiAgZm9udC1mYW1pbHk6IFwiVWJ1bnR1XCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogI0JCQkRCRjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnVzckluZm9EaXYgPiBoMSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogLTIlO1xufVxuXG4jdXNyTmFtZSB7XG4gIG1hcmdpbi10b3A6IC0wLjQlO1xufVxuXG4udXNySW5mbyB7XG4gIGZvbnQtZmFtaWx5OiBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTIyMjU7XG4gIGNvbG9yOiAjQkJCREJGO1xuICBmb250LXNpemU6IDFyZW07XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgbWFyZ2luLXRvcDogLTQlO1xufVxuXG4udXNySW5mbzpmb2N1cyB7XG4gIG91dGxpbmUtc3R5bGU6IG5vbmU7XG59XG5cbiNqb2luQnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzU4NjVGMjtcbiAgY29sb3I6ICNmMGYwZjA7XG4gIGZvbnQtZmFtaWx5OiBcIlVidW50dVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG1hcmdpbi10b3A6IDEwJTtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuXG4jam9pbkJ0bjpob3ZlciB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ1NTFkYTtcbn1cblxuLmNoYXREaXYge1xuICBoZWlnaHQ6IDYycmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjAyMjI2O1xuICBjb2xvcjogYXF1YTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgbWFyZ2luOiAtMC44JTtcbn1cblxuLnJvb21Db250YWluZXIge1xuICB3aWR0aDogMjByZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMyRjMxMzc7XG4gIHBhZGRpbmc6IDFyZW07XG59XG5cbi5yb29tRGl2IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnJvb21CdG4ge1xuICBtYXJnaW4tdG9wOiAyJTtcbn1cblxuLm1zZ0NvbnRhaW5lciB7XG4gIHdpZHRoOiA5N2VtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzUzODNFO1xuICBwYWRkaW5nOiAycmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatPageComponent","constructor","chatService","getTime","time","Date","currTime","toLocaleString","console","log","joinRoom","roomId","sender","isLoggedIn","chat$","getMsgByRoomId","subscribe","msg","messages","push","window","alert","sendMessage","message","data","senderMsg","newMsg","toString","sendMessageByRoom","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\pages\\chat-page\\chat-page.component.html","C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\pages\\chat-page\\chat-page.component.ts"],"sourcesContent":["<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n<link href=\"https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap\" rel=\"stylesheet\">\n\n\n<div class=\"mainDiv\">\n    <div class=\"usrInfoContainer\" *ngIf=\"!isLoggedIn\">\n        <div class=\"usrInfoDiv\">\n            <h1>Welcome</h1>\n            <p id=\"usrName\">User Name: </p>\n            <input  class=\"usrInfo\" type=\"text\" [(ngModel)]=\"sender\" />\n            <p>Room ID: </p>\n            <input  class=\"usrInfo\" type=\"text\" [(ngModel)]=\"roomId\" />\n            <button id=\"joinBtn\" (click)=\"joinRoom(roomId)\">Join</button>\n        </div>\n    </div>\n    <div class=\"chatDiv\" *ngIf=\"isLoggedIn\">\n        <div class=\"roomContainer\">\n            <div class=\"roomDiv\">\n                <h1>{{sender}}</h1>\n                <button class=\"roomBtn\">Room1</button>\n                <button class=\"roomBtn\">Room2</button>\n            </div>\n        </div>\n        <div class=\"msgContainer\">\n            <div clas=\"msgDiv\">\n                <p>Room: {{roomId}}</p>\n                <p>From: asdasd</p>\n                <p>Msg: e12ewqwefwev</p>\n                <div *ngFor=\"let msg of messages\">\n                    <p>From: asdasd</p>\n                    <p>Msg: e12ewqwefwev</p>\n                    <!-- <p>From: {{msg.sender}}</p>\n                    <p>Msg: {{msg.senderMsg}}</p> -->\n                </div>\n            </div>\n            <div class=\"msgSendDiv\">\n                <input type=\"text\" [(ngModel)]=\"newMsg\" placeholder=\"message\" />\n                <button (click)=\"sendMessage(newMsg)\">Send</button>\n            </div>\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { async, Observable, of } from 'rxjs';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { ChatModel } from 'src/models/chat.model';\n\n@Component({\n  selector: 'app-chat-page',\n  templateUrl: './chat-page.component.html',\n  styleUrls: ['./chat-page.component.scss']\n})\nexport class ChatPageComponent{\n\n  constructor(private chatService: ChatService){}\n\n  chat$ !: Observable<any>;\n  messages: any = [];\n  roomId: string = '';\n  newMsg: string = '';\n  sender: string = '';\n  isLoggedIn: boolean = false;\n\n  getTime(){\n    const time = new Date();\n    let currTime: string = time.toLocaleString();\n    console.log(currTime);\n    return currTime;\n  }\n\n  joinRoom(roomId: string){\n    if(roomId || this.sender){\n      this.isLoggedIn = true;\n      this.chat$ = this.chatService.getMsgByRoomId(roomId);\n      this.chat$.subscribe( (msg: any) => {\n        this.messages.push(msg);\n      });\n    }else{\n      window.alert(\"Enter the missing field\");\n    }\n  }\n\n  sendMessage(message: string){\n    let data: ChatModel = {\n      roomId: this.roomId,\n      sender: this.sender,\n      senderMsg: this.newMsg,\n      time: this.getTime().toString(),\n    }\n    this.chatService.sendMessageByRoom(data);\n  }\n\n  // chat$: Observable<ChatState>;\n  // room$: Observable<ChatState>;\n\n  // constructor(private store: Store<{chat: ChatState}>, private chatService: ChatService){\n  //   this.chat$ = this.store.select('chat');\n  //   this.room$ = this.store.select('chat');\n  // }\n\n  // ngOnInit(){\n  //   this.store.dispatch(ChatActions.getAllChat());\n  //   this.chat$.subscribe( (data) => {\n  //     // console.log(data);\n  //   });\n  // }\n\n  // getChatById(roomId: string){\n  //   // this.store.dispatch(ChatActions.getById());\n  //   // this.chat$.subscribe( (data) => {\n  //   //   // console.log(data);\n  //   // })\n  //   this.chatService.getById(roomId).subscribe((data) =>{\n  //     console.log(data)\n  //   })\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}