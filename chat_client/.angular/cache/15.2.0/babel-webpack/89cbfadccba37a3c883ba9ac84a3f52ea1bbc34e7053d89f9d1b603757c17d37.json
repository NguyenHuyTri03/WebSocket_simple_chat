{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-socket-io\";\nexport class ChatService {\n  constructor(httpClient, socket) {\n    this.httpClient = httpClient;\n    this.socket = socket;\n  }\n  getAllChats() {\n    return this.httpClient.get(`${environment.chatUrl}chat`);\n  }\n  getById(roomId) {\n    let param = {\n      'roomId': roomId\n    };\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?`, {\n      params: param\n    });\n  }\n  getMsgByRoomId(roomId) {\n    const channel = \"message-\" + roomId;\n    return this.socket.fromEvent(channel);\n  }\n}\nChatService.ɵfac = function ChatService_Factory(t) {\n  return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Socket));\n};\nChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatService,\n  factory: ChatService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,WAAW,QAAQ,0CAA0C;;;;AAMtE,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,eAAU,GAAVD,UAAU;IAAsB,WAAM,GAANC,MAAM;EAAY;EAEtEC,WAAW;IACT,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,GAAGN,WAAW,CAACO,OAAO,MAAM,CAAC;EAC1D;EAEAC,OAAO,CAACC,MAAc;IACpB,IAAIC,KAAK,GAAQ;MAAC,QAAQ,EAAED;IAAM,CAAC;IACnC,OAAO,IAAI,CAACN,UAAU,CAACG,GAAG,CAAC,GAAGN,WAAW,CAACO,OAAO,YAAY,EAAE;MAACI,MAAM,EAAED;IAAK,CAAC,CAAC;EACjF;EAEAE,cAAc,CAACH,MAAc;IAC3B,MAAMI,OAAO,GAAG,UAAU,GAAGJ,MAAM;IACnC,OAAO,IAAI,CAACL,MAAM,CAACU,SAAS,CAACD,OAAO,CAAC;EACvC;;AAhBWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["environment","ChatService","constructor","httpClient","socket","getAllChats","get","chatUrl","getById","roomId","param","params","getMsgByRoomId","channel","fromEvent","factory","providedIn"],"sourceRoot":"","sources":["C:\\ITSS\\class projects\\nestjs\\Chat\\chat_client\\src\\app\\services\\chat.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { ChatModel } from 'src/models/chat.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  constructor(private httpClient: HttpClient, private socket: Socket) { }\n\n  getAllChats(){\n    return this.httpClient.get(`${environment.chatUrl}chat`);\n  }\n\n  getById(roomId: string){\n    let param: any = {'roomId': roomId};\n    return this.httpClient.get(`${environment.chatUrl}chat/byId?`, {params: param})\n  }\n\n  getMsgByRoomId(roomId: string){\n    const channel = \"message-\" + roomId\n    return this.socket.fromEvent(channel);\n  }\n\n  // createChat(chatData: ChatModel){\n  //   return this.httpClient.post<ChatModel>(`${environment.chatUrl}`, {\n  //     roomId: chatData.roomId,\n  //     sender: chatData.sender,\n  //     receiver: chatData.receiver,\n  //     receiverMsg: chatData.receiverMsg,\n  //     senderMsg: chatData.senderMsg,\n  //     time: chatData.time\n  //   })\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}